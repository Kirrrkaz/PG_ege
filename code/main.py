from json import load
from aiogram import Bot, Dispatcher, executor, types
import logging

from config import API_TOKEN
import keyboard as kb

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# start

@dp.message_handler(commands=["start"])
async def manual(msg: types.Message):
    with open("1.json", "r") as f:
        sys = load(f)
    await msg.answer(f"""–ü—Ä–∏–≤–µ—Ç—Å–≤—Ç—É—é, {msg.from_user.first_name} üëã\n–Ø - –±–æ—Ç {sys['name']} ü§ñ, –ø—Ä–æ–≤–µ—Ä—è—é –≤–∞—à–∏ –∑–Ω–∞–Ω–∏—è –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π.\n
    üìÇ –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:""", reply_markup=kb.mainMenu )



# —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ø–∏–∫—á–∞–º–∏
# –∑–∞–±–∏—Ç—å –≤–∞—Ä–∏–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ + –ø—Ä–æ–≤–µ—Ä–∫—É
# NON MORE IDEAS ?? ??

@dp.callback_query_handler(text_contains="button_easy")
async def ans(call: types.CallbackQuery):
   await bot.delete_message(call.from_user.id, call.message.message_id)

   if call.data == "button_easy":
       photo = open("derivative\e_task_1.png", "rb")
       await bot.send_photo(call.from_user.id, photo)
       await bot.send_message(call.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:", reply_markup=kb.ans1)

    
@dp.message_handler(regexp='(^–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è)')
async def cats(message: types.Message):
    with open('code\derivative\pic1.png', 'rb') as photo:
        await message.reply_photo(photo, caption='–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤: ')     





if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)